{
	"info": {
		"_postman_id": "35e69af6-fd3e-458e-a87f-19b6f6842a5d",
		"name": "Peojekt-Test",
		"description": "Test für die Peojekt API, basierend auf der Postman Collection. ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "RegisterKey",
			"item": [
				{
					"name": "update RegisterKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38bacf3-1404-4e02-a3b7-7461d26fb0f9",
								"exec": [
									"pm.test(\"Update Register Key status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4a12f275-fcf4-4b71-93e8-4a3644a5a2b9",
								"exec": [
									"",
									"pm.environment.set(\"user2-password-new\", \"\\\"MeinNeuesSicheresPasswort42\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"registerKey\": \"SichererSchlüssel1337\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/registerKey?token={{admin-token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"registerKey"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								}
							]
						},
						"description": "Updates current register key. If given value is \"falsy\" (e. g. undefined, null, false, \" \") the self registration will be deactivated."
					},
					"response": []
				},
				{
					"name": "get RegisterKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a48df0f9-3926-40fb-9ce3-ac80c5397ed0",
								"exec": [
									"pm.test(\"GET Register Key status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.registerKey) {",
									"    pm.environment.set(\"registerKey\", pm.response.json().payload.registerKey);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/registerKey?token={{admin-token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"registerKey"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								}
							]
						},
						"description": "Returns register key."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9e7fb1a-c3ba-4ca1-95ba-22de576b1a0b",
								"exec": [
									"",
									"",
									"pm.test(\"Register status test\", function () {",
									"",
									"if (pm.response.json().message && (pm.response.json().message === \"Username already exists\")) {",
									"    pm.response.to.have.status(400);",
									"} else {",
									"    pm.response.to.have.status(201);",
									"}",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.token) {",
									"    pm.environment.set(\"token\", pm.response.json().payload.token);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2a14270f-76f8-41b3-8bd8-ed3a96377095",
								"exec": [
									"pm.environment.set(\"user1-name\", \"\\\"Nutzername\\\"\");",
									"pm.environment.set(\"user1-password\", \"\\\"MeinSicheresPasswort1337\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": {{user1-name}},\n    \"password\": {{user1-password}},\n    \"registerKey\": \"SichererSchlüssel1337\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/register",
							"host": [
								"{{backend}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "430b6624-f359-4567-b3ec-ec02191dd7a6",
								"exec": [
									"pm.test(\"Login status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.token) {",
									"    pm.environment.set(\"token\", pm.response.json().payload.token);",
									"}",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.directorOfStudies_id) {",
									"    pm.environment.set(\"directorOfStudies_id\", pm.response.json().payload.directorOfStudies_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": {{user1-name}},\n    \"password\": {{user1-password}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/login",
							"host": [
								"{{backend}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "FieldOfStudy",
			"item": [
				{
					"name": "get FieldsOfStudy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f35599b2-8cff-4b21-9183-5fc5c7f8e52c",
								"exec": [
									"pm.test(\"GET FieldOfStudy status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/fieldsOfStudy?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"fieldsOfStudy"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "withMajorSubjects",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering (Boolean)",
									"disabled": true
								}
							]
						},
						"description": "Get all FieldsOfStudy."
					},
					"response": []
				},
				{
					"name": "create FieldOfStudy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5624a8c7-9a32-45aa-8158-83188805cc8f",
								"exec": [
									"pm.test(\"CREATE FieldOfStudy status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.fieldOfStudy_id) {",
									"    pm.environment.set(\"fieldOfStudy_id\", pm.response.json().payload.fieldOfStudy_id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Witsinformatik\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/fieldsOfStudy?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"fieldsOfStudy"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a new FieldOfStudy."
					},
					"response": []
				},
				{
					"name": "update FieldOfStudy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11928d6b-9681-46f1-a6c7-75d9a34b1b24",
								"exec": [
									"pm.test(\"UPDATE FieldOfStudy status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wirtschaftsinformatik\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/fieldsOfStudy?token={{token}}&fieldOfStudyId={{fieldOfStudy_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"fieldsOfStudy"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "fieldOfStudyId",
									"value": "{{fieldOfStudy_id}}"
								}
							]
						},
						"description": "Update a given Field of Study."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MajorSubjects",
			"item": [
				{
					"name": "get MajorSubjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dcc1f3d-8090-44b5-852f-87c68dab7ec7",
								"exec": [
									"pm.test(\"GET MajorSubject status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/majorSubjects?token={{token}}&fieldOfStudyId={{fieldOfStudy_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"majorSubjects"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "fieldOfStudyId",
									"value": "{{fieldOfStudy_id}}",
									"description": "Returns all major subjects for that field of study"
								}
							]
						},
						"description": "Get all major subjects to the given field of study."
					},
					"response": []
				},
				{
					"name": "create MajorSubject",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c623e81c-e6f2-4a2b-b6e0-82e2f21a1467",
								"exec": [
									"pm.test(\"CREATE MajorSubject status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.majorSubject_id) {",
									"    pm.environment.set(\"majorSubject_id\", pm.response.json().payload.majorSubject_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fieldOfStudy_id\": {{fieldOfStudy_id}}, \r\n    \"name\": \"Software Engineering\",\r\n    \"catalog_effective_from\": \"Gültig ab 2018\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/majorSubjects?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"majorSubjects"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a major subject and link it with the given field of study."
					},
					"response": []
				},
				{
					"name": "update MajorSubject",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7df2d107-f401-4d84-b55d-c6b45a5410c3",
								"exec": [
									"pm.test(\"UPDATE MajorSubject status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fieldOfStudy_id\": {{fieldOfStudy_id}},\r\n    \"name\": \"Software Engineering\",\r\n    \"catalog_effective_from\": \"Gültig ab 2019\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/majorSubjects?token={{token}}&majorSubjectId={{majorSubject_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"majorSubjects"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "majorSubjectId",
									"value": "{{majorSubject_id}}"
								}
							]
						},
						"description": "Update a given major subject linked with a given field of study."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "AcedemicRecords",
			"item": [
				{
					"name": "get AcedemicRecords",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d5eb143-40d9-4e17-9e00-8cc6f1bb3a8b",
								"exec": [
									"pm.test(\"GET AcedemicRecord status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/academicRecords?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"academicRecords"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "withMajorSubjects",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering (Boolean)",
									"disabled": true
								}
							]
						},
						"description": "Get all acedemic records."
					},
					"response": []
				},
				{
					"name": "create AcademicRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "343677e6-57f7-4f13-9464-564d7bb1408c",
								"exec": [
									"pm.test(\"CREATE AcademicRecord status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.academicRecord_id) {",
									"    pm.environment.set(\"academicRecord_id\", pm.response.json().payload.academicRecord_id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"abbreviation\": \"Kl\",\r\n    \"type\": \"Klausur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/academicRecords?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"academicRecords"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create an academic record."
					},
					"response": []
				},
				{
					"name": "update AcademicRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66bf4406-3f1c-40cb-9fb4-06595a91ef81",
								"exec": [
									"pm.test(\"UPDATE AcedemicRecord status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"abbreviation\": \"K\",\r\n    \"type\": \"Klausur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/academicRecords?token={{token}}&academicRecordId={{academicRecord_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"academicRecords"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "academicRecordId",
									"value": "{{academicRecord_id}}"
								}
							]
						},
						"description": "Update a given academic record."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MainFocuses",
			"item": [
				{
					"name": "get MainFocuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd5c0ca6-1f47-4c44-bacb-9d2fa977baf2",
								"exec": [
									"pm.test(\"GET MainFocus status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/mainFocuses?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"mainFocuses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Gets all MainFocuses"
					},
					"response": []
				},
				{
					"name": "create MainFocus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1bb1579-8b95-417a-abde-f729a3ceab3f",
								"exec": [
									"pm.test(\"CREATE MainFocus status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.mainFocus_id) {",
									"    pm.environment.set(\"mainFocus_id\", pm.response.json().payload.mainFocus_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Programmieren\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/mainFocuses?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"mainFocuses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a new MainFocus"
					},
					"response": []
				},
				{
					"name": "update MainFocus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0ef1b3d-42f0-4965-8c20-f2659e6712a0",
								"exec": [
									"pm.test(\"UPDATE MainFocus status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Programmieren\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/mainFocuses?token={{token}}&mainFocusId={{mainFocus_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"mainFocuses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "mainFocusId",
									"value": "{{mainFocus_id}}"
								}
							]
						},
						"description": "Update a given MainFocus."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ModuleGroups",
			"item": [
				{
					"name": "create ModuleGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c3d90f8-533f-4a1a-87c4-61de31aebb5c",
								"exec": [
									"pm.test(\"CREATE ModuleGroup status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.moduleGroup_id) {",
									"    pm.environment.set(\"moduleGroup_id\", pm.response.json().payload.moduleGroup_id);",
									"}",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.Modules[0].Lectures[0].lecture_id) {",
									"    pm.environment.set(\"lecture_id\", pm.response.json().payload.Modules[0].Lectures[0].lecture_id);",
									"}",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.Modules[0].module_id) {",
									"    pm.environment.set(\"module_id\", pm.response.json().payload.Modules[0].Lectures[0].module_id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"majorSubject_id\": {{majorSubject_id}},\n    \"name\": \"Profil I\", \n    \"number_of_modules_to_attend\": 1, \n    \"from_semester_number\": 1, \n    \"to_semester_number\": 2,\n    \"Modules\": [\n    \t{\n    \t\t\"name\": \"Technische Grundlagen mobiler Applikationen\",\n    \t\t\"description\": \"Beschreibung hier einfügen...\",\n    \t\t\"ects\": 0, \n    \t\t\"catalog_id\": \"WWISE_1337\",\n    \t\t\"academicRecord_ids\": [{{academicRecord_id}}],\n    \t\t\"number_of_lectures_to_attend\": 0, \n    \t\t\"rated\": true, \n    \t\t\"requirements\": \"Keine\",\n    \t\t\"Lectures\":[\n    \t\t\t{\n    \t\t\t\t\"name\": \"Marketing\",\n    \t\t\t\t\"workload_home\": \"36 Stunden\",\n    \t\t\t\t\"workload_dhbw\": \"24 Stunden\",\n    \t\t\t\t\"catalog_id\": \"WWISE_301.2\",\n    \t\t\t\t\"mainFocus_ids\": [{{mainFocus_id}}]\n    \t\t\t}\n    \t\t]\n    \t}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/moduleGroups?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"moduleGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a module group and link it with the given major subject."
					},
					"response": []
				},
				{
					"name": "update ModuleGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "821c19c0-488c-4acf-af4f-87aa8f0ed3be",
								"exec": [
									"pm.test(\"UPDATE ModuleGroup status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"majorSubject_id\": {{majorSubject_id}},\n    \"name\": \"Profil I\", \n    \"number_of_modules_to_attend\": 1, \n    \"from_semester_number\": 1, \n    \"to_semester_number\": 2,\n    \"Modules\": [\n    \t{\n    \t\t\"module_id\": {{module_id}},\n    \t\t\"name\": \"Technische Grundlagen mobiler Applikationen\",\n    \t\t\"description\": \"Ein tolles Fach im Coputerraum!\",\n    \t\t\"ects\": 0, \n    \t\t\"catalog_id\": \"WWISE_1337\",\n    \t\t\"academicRecord_ids\": [{{academicRecord_id}}],\n    \t\t\"number_of_lectures_to_attend\": 0, \n    \t\t\"rated\": true,\n    \t\t\"requirements\": \"Keine\",\n    \t\t\"Lectures\":[\n    \t\t\t{\n    \t\t\t\t\"lecture_id\": {{lecture_id}}, \n    \t\t\t\t\"name\": \"Marketing\",\n    \t\t\t\t\"workload_home\": \"36 Stunden\",\n    \t\t\t\t\"workload_dhbw\": \"24 Stunden\",\n    \t\t\t\t\"catalog_id\": \"WWISE_301.2\",\n    \t\t\t\t\"mainFocus_ids\": [{{mainFocus_id}}]\n    \t\t\t}\n    \t\t]\n    \t}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/moduleGroups?token={{token}}&moduleGroupId={{moduleGroup_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"moduleGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "moduleGroupId",
									"value": "{{moduleGroup_id}}"
								}
							]
						},
						"description": "Update a given module group."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "get Courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcb02768-b0a2-4c56-bc71-ef46063eb9d4",
								"exec": [
									"pm.test(\"GET Course status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/courses?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Get all courses connected to the given director of studies."
					},
					"response": []
				},
				{
					"name": "create Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cc4f1fb-f395-4da0-b86b-ca847783ec2e",
								"exec": [
									"pm.test(\"CREATE Course status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.course_id) {",
									"    pm.environment.set(\"course_id\", pm.response.json().payload.course_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"WWI 17 SEB\",\r\n    \"google_calendar_id\": \"iq90i34lq6v196rqs4986dp370@group.calendar.google.com\",\r\n    \"majorSubject_id\": {{majorSubject_id}},\r\n    \"directorOfStudies_ids\": [{{directorOfStudies_id}}],\r\n    \"Semesters\": [\r\n        {\r\n            \"name\": \"WS17/18\",\r\n            \"number\": 1,\r\n            \"start_date\": \"2017-10-23\",\r\n            \"end_date\": \"2018-02-19\"\r\n        },\r\n        {\r\n            \"name\": \"SS18\",\r\n            \"number\": 2,\r\n            \"start_date\": \"2018-05-07\",\r\n            \"end_date\": \"2018-08-03\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/courses?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a course and link it with the given director of studies."
					},
					"response": []
				},
				{
					"name": "update Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64c52cc3-6472-41d5-a156-3c8bba271256",
								"exec": [
									"pm.test(\"UPDATE Course status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"WWI 17 SE B\",\r\n    \"google_calendar_id\": \"iq90i34lq6v196rqs4986dp370@group.calendar.google.com\",\r\n    \"majorSubject_id\": {{majorSubject_id}},\r\n    \"directorOfStudies_ids\": [{{directorOfStudies_id}}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/courses?token={{token}}&courseId={{course_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						},
						"description": "Update a given course if it is linked with a given director of studies."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Semesters",
			"item": [
				{
					"name": "create Semester",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88df2460-185a-4829-904b-be15b1ac1775",
								"exec": [
									"pm.test(\"CREATE Semester status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.semester_id) {",
									"    pm.environment.set(\"semester_id\", pm.response.json().payload.semester_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"course_id\": {{course_id}},\r\n    \"name\": \"SS18\",\r\n    \"number\": 0,\r\n    \"start_date\": \"2018-05-07\",\r\n    \"end_date\": \"2018-08-03\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/semesters?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"semesters"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a new semester entry for given course, if couse is given."
					},
					"response": []
				},
				{
					"name": "update Semester",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc8d8f84-998d-4d57-aff8-d47bfd1c9be0",
								"exec": [
									"pm.test(\"UPDATE Semester status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"course_id\": {{course_id}},\r\n    \"name\": \"SS18\",\r\n    \"number\": 0,\r\n    \"start_date\": \"2019-05-07\",\r\n    \"end_date\": \"2019-08-03\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/semesters?token={{token}}&semesterId={{semester_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"semesters"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "semesterId",
									"value": "{{semester_id}}"
								}
							]
						},
						"description": "Update a given semester"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Lecturers",
			"item": [
				{
					"name": "get Lecturers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a1f295a-c366-4456-a569-90649d11d47c",
								"exec": [
									"pm.test(\"GET Lecturers status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/lecturers?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturers"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "experience",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering",
									"disabled": true
								},
								{
									"key": "comment",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering",
									"disabled": true
								},
								{
									"key": "firstname",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering",
									"disabled": true
								},
								{
									"key": "lastname",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering",
									"disabled": true
								},
								{
									"key": "extern",
									"value": "[REQUIRED]",
									"description": "Optional parameter for filtering",
									"disabled": true
								}
							]
						},
						"description": "Gets all lecturers linked to the given director of studies."
					},
					"response": []
				},
				{
					"name": "create Lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce58efa6-890c-4b4c-8962-4670ea304a45",
								"exec": [
									"pm.test(\"CREATE Lecturer status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.lecturer_id) {",
									"    pm.environment.set(\"lecturer_id\", pm.response.json().payload.lecturer_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Sebastian\",\n    \"lastname\": \"Ritterbusch\",\n    \"academic_title\": \"Prof. Dr.\",\n    \"email\": \"sebastian.ritterbusch@dhbw-mannheim.de\",\n    \"salutation\": \"Herr\",\n    \"phonenumber\": \"+49 621 4105 - 1724\",\n    \"experience\": \"Mathematik, Podcasts\",\n    \"mainFocus_ids\": [{{mainFocus_id}}],\n    \"comment\": \"sehr engagiert\",\n    \"is_extern\": true,\n    \"allow_manipulation\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/lecturers?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturers"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a lecturer and link him with the given director of studies."
					},
					"response": []
				},
				{
					"name": "update Lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77918a3a-3c47-43a3-82c2-233b69a076e2",
								"exec": [
									"pm.test(\"UPDATE Lecturer status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Sebastian\",\n    \"lastname\": \"Ritterbusch\",\n    \"academic_title\": \"Prof. Dr.\",\n    \"email\": \"sebastian.ritterbusch@dhbw-mannheim.de\",\n    \"salutation\": \"Herr\",\n    \"phonenumber\": \"+49 621 4105 - 1724\",\n    \"experience\": \"Mathematik, Podcasts\",\n    \"mainFocus_ids\": [{{mainFocus_id}}],\n    \"profile\": \"...\",\n    \"research\": \"...\",\n    \"cv\": \"...\",\n    \"comment\": \"sehr engagiert\",\n    \"is_extern\": true,\n    \"allow_manipulation\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/lecturers?token={{token}}&lecturerId={{lecturer_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturers"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "lecturerId",
									"value": "{{lecturer_id}}"
								}
							]
						},
						"description": "Update a given lecturer if he is linked with a given director of studies."
					},
					"response": []
				},
				{
					"name": "add Lecturer CV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "633088d6-b9be-4928-b3da-a5cfcc3de9ce",
								"exec": [
									"pm.test(\"PUT LecturerCV status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cv",
									"type": "file",
									"src": "resume.pdf"
								}
							]
						},
						"url": {
							"raw": "{{backend}}/lecturerCV?token={{token}}&lecturerId={{lecturer_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturerCV"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "lecturerId",
									"value": "{{lecturer_id}}"
								}
							]
						},
						"description": "Adds CV of a given lecturer."
					},
					"response": []
				},
				{
					"name": "get LecturerCV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2356afc-91e2-42ff-98a5-44e65a3312fa",
								"exec": [
									"pm.test(\"GET LecturerCV status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{backend}}/lecturerCV?token={{token}}&lecturerId={{lecturer_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturerCV"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "lecturerId",
									"value": "{{lecturer_id}}"
								}
							]
						},
						"description": "Gets CV of a given lecturer."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Presentations",
			"item": [
				{
					"name": "get Presentations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2908b081-d4df-474e-81ba-9455904a1f10",
								"exec": [
									"pm.test(\"GET Presentation status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/presentations?token={{token}}&courseId={{course_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"presentations"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								},
								{
									"key": "getCoLecturers",
									"value": "true",
									"description": "Optional parameter for requesting lecturers with similar lectures in similar courses",
									"disabled": true
								},
								{
									"key": "semesterId",
									"value": "1",
									"description": "Optional parameter for filtering",
									"disabled": true
								}
							]
						},
						"description": "Get all presentations connected to a given course."
					},
					"response": []
				},
				{
					"name": "create Presentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40d88ce3-745b-44a2-b417-a0e402a65ac7",
								"exec": [
									"pm.test(\"CREATE Presentation status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.presentation_id) {",
									"    pm.environment.set(\"presentation_id\", pm.response.json().payload.presentation_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"lecture_id\": {{lecture_id}}, \r\n\t\"lecturer_id\": {{lecturer_id}}, \r\n\t\"academicRecord_id\": {{academicRecord_id}}, \r\n\t\"semester_id\": {{semester_id}}, \r\n\t\"course_id\": {{course_id}}, \r\n\t\"status\": \"Dozent offen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/presentations?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"presentations"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Create a presentation."
					},
					"response": []
				},
				{
					"name": "update Presentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa18f742-ef5b-4410-aea2-acbf5fd16e3f",
								"exec": [
									"pm.test(\"UPDATE Presentation status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"lecture_id\": {{lecture_id}}, \r\n\t\"lecturer_id\": {{lecturer_id}}, \r\n\t\"academicRecord_id\": {{academicRecord_id}}, \r\n\t\"semester_id\": {{semester_id}}, \r\n\t\"course_id\": {{course_id}}, \r\n\t\"status\": \"Dozent gefunden\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/presentations?token={{token}}&presentationId={{presentation_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"presentations"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "presentationId",
									"value": "{{presentation_id}}"
								}
							]
						},
						"description": "Update a given presentation."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Modulecatalog",
			"item": [
				{
					"name": "get Modulecatalogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f64a8f13-f1ab-4145-9446-09b09d8afd36",
								"exec": [
									"pm.test(\"GET Modulecatalogs status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/modulecatalog?token={{token}}&majorSubjectId={{majorSubject_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"modulecatalog"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "majorSubjectId",
									"value": "{{majorSubject_id}}",
									"description": "Returns all modulecatalogs for majorSubjects"
								}
							]
						},
						"description": "Gets all modulecatalogs connected to a major subject."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DirectorOfStudies",
			"item": [
				{
					"name": "get DirectorOfStudies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "823b977c-8030-46d3-93b0-f8ca980cf9a4",
								"exec": [
									"pm.test(\"GET Director of Studies status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.DirectorOfStudies.directorOfStudies_id) {",
									"    pm.environment.set(\"current_directorOfStudies_id\", pm.response.json().payload.DirectorOfStudies.directorOfStudies_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/directorOfStudies?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"directorOfStudies"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Returns information about the currently logged in DirectorOfStudies."
					},
					"response": []
				},
				{
					"name": "change DirectorOfStudies Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12acf872-eb55-45e4-a8ec-b54ef801874e",
								"exec": [
									"pm.test(\"UPDATE Password status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bcd394a3-b464-44d3-ae5d-def946cf921a",
								"exec": [
									"",
									"pm.environment.set(\"user1-password-new\", \"\\\"MeinNeuesSicheresPasswort1337\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"oldPassword\": {{user1-password}}, \r\n\t\"newPassword\": {{user1-password}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/changePassword?directorOfStudiesId={{current_directorOfStudies_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"changePassword"
							],
							"query": [
								{
									"key": "directorOfStudiesId",
									"value": "{{current_directorOfStudies_id}}"
								}
							]
						},
						"description": "Enables to update passwords for currently logged in Director of Studies."
					},
					"response": []
				},
				{
					"name": "update DirectorOfStudies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ddade69-c00f-4028-8ae8-fe998db1e7f2",
								"exec": [
									"pm.test(\"UPDATE DirectorOfStudies status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d1e4376-2671-425b-b363-a3b64994747f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"username\": {{user1-name}}, \r\n\t\"misc\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/directorOfStudies?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"directorOfStudies"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Enables to update username- and misc-field for currently logged in Director of Studies."
					},
					"response": []
				}
			],
			"description": "Routes for Director of Study.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "delete Presentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bd2485b-d0a1-48a9-9d6d-6fec59d78ca0",
								"exec": [
									"pm.test(\"DELETE Presentation status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/presentations?token={{token}}&presentationId={{presentation_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"presentations"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "presentationId",
									"value": "{{presentation_id}}"
								}
							]
						},
						"description": "Deletes a given presentation."
					},
					"response": []
				},
				{
					"name": "delete Lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2011b8-2cfa-46ec-88c9-db71833e9002",
								"exec": [
									"pm.test(\"DELETE Lecturer status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/lecturers?token={{token}}&lecturerId={{lecturer_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"lecturers"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "lecturerId",
									"value": "{{lecturer_id}}"
								}
							]
						},
						"description": "Deletes a given lecturer if he is linked with a given director of studies."
					},
					"response": []
				},
				{
					"name": "delete Semester",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16c27401-bf7c-4780-97b6-dab8a71d25bf",
								"exec": [
									"pm.test(\"DELETE Semester status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/semesters?token={{token}}&semesterId={{semester_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"semesters"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "semesterId",
									"value": "{{semester_id}}"
								}
							]
						},
						"description": "Deletes a given semester."
					},
					"response": []
				},
				{
					"name": "delete Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "205f5857-365b-4840-b2d2-00a361c360d2",
								"exec": [
									"pm.test(\"DELETE Course status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/courses?token={{token}}&courseId={{course_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						},
						"description": "Deletes a given course if it is linked with a given director of studies."
					},
					"response": []
				},
				{
					"name": "delete ModuleGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "280f99c9-853f-4c5f-90a1-5b2e0e70826d",
								"exec": [
									"pm.test(\"DELETE ModuleGroup status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/moduleGroups?token={{token}}&moduleGroupId={{moduleGroup_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"moduleGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "moduleGroupId",
									"value": "{{moduleGroup_id}}"
								}
							]
						},
						"description": "Deletes a given module group."
					},
					"response": []
				},
				{
					"name": "delete MainFocus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "813b9bf1-cb57-4374-9329-ad6da659e725",
								"exec": [
									"pm.test(\"DELETE MainFocus status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/mainFocuses?token={{token}}&mainFocusId={{mainFocus_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"mainFocuses"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "mainFocusId",
									"value": "{{mainFocus_id}}"
								}
							]
						},
						"description": "Deletes a given MainFocus"
					},
					"response": []
				},
				{
					"name": "delete AcademicRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ed88ad2-0bae-47c2-826d-c86a830d29c2",
								"exec": [
									"pm.test(\"DELETE AcademicRecord status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/academicRecords?token={{token}}&academicRecordId={{academicRecord_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"academicRecords"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "academicRecordId",
									"value": "{{academicRecord_id}}"
								}
							]
						},
						"description": "Deletes a given academic record."
					},
					"response": []
				},
				{
					"name": "delete MajorSubject",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f792bc7-edc4-4f65-bb2d-b5f652fba0a0",
								"exec": [
									"pm.test(\"DELETE MajorSubject status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/majorSubjects?token={{token}}&majorSubjectId={{majorSubject_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"majorSubjects"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "majorSubjectId",
									"value": "{{majorSubject_id}}"
								}
							]
						},
						"description": "Deletes a given major subject."
					},
					"response": []
				},
				{
					"name": "delete FieldOfStudy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d6add67-9cac-4148-a6f9-bb8696e66f2f",
								"exec": [
									"pm.test(\"DELETE FieldOfStudy status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backend}}/fieldsOfStudy?token={{token}}&fieldOfStudyId={{fieldOfStudy_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"fieldsOfStudy"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "fieldOfStudyId",
									"value": "{{fieldOfStudy_id}}"
								}
							]
						},
						"description": "Deletes a given Field of Study."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TransferOwnership",
			"item": [
				{
					"name": "transferOwnership",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b053ce48-b1ec-4301-9ecc-d335d443749d",
								"exec": [
									"pm.test(\"TransferOwnership status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"newOwnerId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/transferOwnership?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"transferOwnership"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Transfers ownership of all Courses, Lecturers and Presentations from one director of studies to another."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c55fb41c-e1bc-4c0e-ab0d-7110c6abc122",
								"exec": [
									"pm.test(\"GET Users status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/users?token={{admin-token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								}
							]
						},
						"description": "Returns all registered users."
					},
					"response": []
				},
				{
					"name": "create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a906822-b19d-4308-a36f-9a86c6db9add",
								"exec": [
									"pm.test(\"User Creation status test\", function () {",
									"",
									"if (pm.response.json().message && (pm.response.json().message === \"Username already exists\")) {",
									"    pm.response.to.have.status(400);",
									"} else {",
									"    pm.response.to.have.status(201);",
									"}",
									"});",
									"",
									"if (pm.response.json().payload && pm.response.json().payload.directorOfStudies_id) {",
									"    pm.environment.set(\"user2-directorOfStudies_id\", pm.response.json().payload.directorOfStudies_id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7b14f213-4059-475d-b60e-3559fd7e7037",
								"exec": [
									"pm.environment.set(\"user2-name\", \"\\\"Nutzername2\\\"\");",
									"pm.environment.set(\"user2-password\", \"\\\"MeinSicheresPasswort42\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": {{user2-name}},\n    \"password\": {{user2-password}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/createUser?token={{admin-token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"createUser"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								}
							]
						},
						"description": "Create a new User"
					},
					"response": []
				},
				{
					"name": "resetPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2ea3be9-fcbb-429b-8808-c3663f645df1",
								"exec": [
									"pm.test(\"Reset Password status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "781c0842-10ac-4846-b42c-2a5990895548",
								"exec": [
									"",
									"pm.environment.set(\"user2-password-new\", \"\\\"MeinNeuesSicheresPasswort42\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"newPassword\": {{user2-password-new}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/resetPassword?token={{admin-token}}&directorOfStudiesId={{user2-directorOfStudies_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"resetPassword"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								},
								{
									"key": "directorOfStudiesId",
									"value": "{{user2-directorOfStudies_id}}"
								}
							]
						},
						"description": "Updates password of given Director of Study."
					},
					"response": []
				},
				{
					"name": "upgrade to admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fb2b5cd-7c4e-4721-bedb-d99e5af6e2b9",
								"exec": [
									"pm.test(\"Admin Upgrade status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c91f08f-a060-49d8-8b3e-ff05a58bdb5b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/upgradeToAdmin?token={{admin-token}}&directorOfStudiesId={{user2-directorOfStudies_id}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"upgradeToAdmin"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								},
								{
									"key": "directorOfStudiesId",
									"value": "{{user2-directorOfStudies_id}}"
								}
							]
						},
						"description": "Upgrades given Director of Study to admin."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GoogleCalendar",
			"item": [
				{
					"name": "get GoogleCalendar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0856cf3-410d-4f6f-8244-fd22e52876f4",
								"exec": [
									"pm.test(\"GET Google Calendar status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend}}/googleCalendar?token={{token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"googleCalendar"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Returns information about google calendars."
					},
					"response": []
				},
				{
					"name": "update GoogleCalendar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f6c9467-1e89-4f2f-b508-77725ee42931",
								"exec": [
									"pm.test(\"UPDATE Google Calendar status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ff4fb876-f494-4b8b-88b3-0565ac052ce4",
								"exec": [
									"",
									"pm.environment.set(\"user1-password-new\", \"\\\"MeinNeuesSicheresPasswort1337\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"apiKey\": \"this is an GC API Key\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend}}/googleCalendar?token={{admin-token}}",
							"host": [
								"{{backend}}"
							],
							"path": [
								"googleCalendar"
							],
							"query": [
								{
									"key": "token",
									"value": "{{admin-token}}"
								}
							]
						},
						"description": "Updates Key-Value pairs for google calendar information. All Key-Value pairs need to be in the request. This is an Admin Functionality."
					},
					"response": []
				}
			],
			"description": "Route for getting the google calendar information.",
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}